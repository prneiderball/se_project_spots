!function(){"use strict";var e="/";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn--disabled",inputErrorClass:"modal__input--error",errorClass:"modal__error--active"},r=(e,t)=>{const r=document.querySelector(`#${e.id}-error`);r&&(e.classList.remove(t.inputErrorClass),r.textContent="",r.classList.remove(t.errorClass))},n=(e,t)=>{const n=Array.from(e.querySelectorAll(t.inputSelector)),a=e.querySelector(t.submitButtonSelector);n.forEach((e=>{r(e,t)})),o(n,a,t)},o=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?(t.classList.add(r.inactiveButtonClass),t.setAttribute("disabled",!0)):(t.classList.remove(r.inactiveButtonClass),t.removeAttribute("disabled"))};var a=e+"images/avatar.jpg";function s(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function i(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const n=t.submitter,o=n.textContent;return s(!0,n,o,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{s(!1,n,o)}))}const l=document.querySelector(".cards__list"),c=document.querySelector("#card-template"),d=document.querySelector("#preview-modal"),u=d?.querySelector(".modal__image"),m=d?.querySelector(".modal__caption"),_=document.querySelector(".profile__name"),h=document.querySelector(".profile__description"),v=document.querySelector("#edit-profile-modal"),f=document.querySelector("#new-post-modal"),p=document.querySelector(".profile__avatar"),y=document.querySelector(".profile__picture-btn"),S=document.querySelector(".profile__add-btn"),q=document.querySelectorAll(".modal__close-btn, .modal__close-preview"),b=document.querySelector("#delete-modal"),E=b.querySelector(".modal__submit-btn_delete"),g=b.querySelector(".modal__submit-btn_cancel"),C=document.querySelector("#edit-avatar-modal"),L=C.querySelector("#avatar_url"),k=C.querySelector(".modal__submit-btn"),x=document.querySelector(".profile__edit-btn"),w=document.forms["edit-profile"],A=document.forms["edit-avatar"],U=document.forms["new-post"],P=U.querySelector("#new-post-caption-input"),D=U.querySelector("#image_url");let I,T,$;const B=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}_checkResponse(e){return e.ok?e.json():Promise.reject(new Error(`Error: ${e.status}`))}_request(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return fetch(`${this._baseUrl}${e}`,t).then(this._checkResponse).catch(this.handleError)}getUserInfo(){return this._request("/users/me",{headers:this._headers})}getInitialCards(){return this._request("/cards",{headers:this._headers})}editProfileAvatar(e){let{avatar:t}=e;return this._request("/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}editUserInfo(e){let{name:t,about:r}=e;return this._request("/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}addNewCard(e){let{name:t,link:r}=e;return this._request("/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this._request(`/cards/${e}`,{method:"DELETE",headers:this._headers})}toggleLike(e,t){return this._request(`/cards/${e}/likes`,{method:t?"PUT":"DELETE",headers:this._headers})}getUserAndCards(){return Promise.all([this.getUserInfo(),this.getInitialCards()]).then((e=>{let[t,r]=e;return{userData:t,cards:r}}))}handleError(e){throw console.error("API Error: ",e),e}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"46c1a639-4215-418c-8205-87dec37d68b7","Content-Type":"application/json"}});function N(e){const t=c.content.querySelector("li").cloneNode(!0),r=t.querySelector(".card__image"),n=t.querySelector(".card__title"),o=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return r.src=e.link,r.alt=e.name,n.textContent=e.name,e.isLiked&&o.classList.add("card__like-btn--liked"),o.addEventListener("click",(()=>{const t=o.classList.contains("card__like-btn--liked");B.toggleLike(e._id,!t).then((e=>{o.classList.toggle("card__like-btn--liked",e.isLiked)})).catch((e=>console.error("Error toggling like:",e)))})),r.addEventListener("click",(()=>{return t=e.link,r=e.name,void(d&&u&&m&&(u.src=t,u.alt=r,m.textContent=r,j(d)));var t,r})),a.addEventListener("click",(r=>{r.stopPropagation(),I=t,T=e._id,j(b)})),t}function O(e){e.preventDefault();const t=L.value.trim();if(t){const r=k.textContent;function n(){return B.editProfileAvatar({avatar:t}).then((e=>{p.src=e.avatar||a,J(C)}))}k.textContent="Saving...",i(n,e).finally((()=>{k.textContent=r}))}}function j(e){e.classList.add("modal--opened"),document.addEventListener("keydown",H),e.addEventListener("click",M)}function J(e){e.classList.remove("modal--opened"),document.removeEventListener("keydown",H),e.removeEventListener("click",M)}function H(e){if("Escape"===e.key){const e=document.querySelector(".modal--opened");e&&J(e)}}function M(e){e.target.classList.contains("modal")&&J(e.target)}function R(e){i((function(){return B.editUserInfo({name:w.name.value,about:w.description.value}).then((e=>{_.textContent=e.name,h.textContent=e.about,J(v)}))}),e)}function z(e){e.preventDefault();const t=P.value.trim(),r=D.value.trim();i((function(){return B.addNewCard({name:t,link:r}).then((e=>{const t=N(e);l.prepend(t),J(f)}))}),e)}var F;B.getUserInfo().then((e=>{$=e._id,_.textContent=e.name,h.textContent=e.about,p.src=e.avatar||a})).catch((e=>console.error("Error fetching user info:",e))),B.getInitialCards().then((e=>{e.forEach((e=>{const t=N(e);l.appendChild(t)}))})).catch((e=>console.error("Error loading cards:",e))),E.addEventListener("click",(e=>{if(e.preventDefault(),T){const e=E.textContent;E.textContent="Deleting...",B.deleteCard(T).then((()=>{I.remove(),I=null,T=null,J(b)})).catch((e=>console.error("Error deleting card:",e))).finally((()=>{E.textContent=e}))}})),g.addEventListener("click",(()=>{J(b),I=null,T=null})),y.addEventListener("click",(()=>{j(C),n(A,t)})),document.addEventListener("DOMContentLoaded",(()=>{S.addEventListener("click",(()=>{const e=document.forms["new-post"];j(f),n(e,t),e.querySelector("input[name='new-post-caption-input']"),e.querySelector("input[name='image_url']")})),x.addEventListener("click",(()=>{w.name.value=_.textContent,w.description.value=h.textContent,j(v),n(w,t)})),w.addEventListener("submit",R),document.forms["new-post"].addEventListener("submit",z),A.addEventListener("submit",O),q.forEach((e=>e.addEventListener("click",(()=>J(e.closest(".modal"))))))})),F=t,document.querySelectorAll(F.formSelector).forEach((e=>{((e,t)=>{const n=Array.from(e.querySelectorAll(t.inputSelector)),a=e.querySelector(t.submitButtonSelector);n.forEach((e=>{e.addEventListener("input",(()=>{((e,t,n)=>{t.validity.valid?r(t,n):((e,t,r)=>{const n=document.querySelector(`#${e.id}-error`);n&&(e.classList.add(r.inputErrorClass),n.textContent=t,n.classList.add(r.errorClass))})(t,t.validationMessage,n)})(0,e,t),o(n,a,t)}))})),o(n,a,t)})(e,F)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,