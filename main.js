!function(){var e={817:function(e){e.exports='<!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"/> <meta name="viewport" content="width=device-width,initial-scale=1"/> <meta name="author" content="P.R.Neider-Ball"/> <meta name="description" content="Spots"/> <meta name="keywords" content="Photo sharing, Portrait photographers"/> <title>Spots</title> </head> <body class="page"> <header class="header"> <img src="<%=require(\'../src/images/logo.svg\')%>" alt="Spots Logo" class="header__logo"/> </header> <main class="content"> <section class="profile page__section"> <div class="profile__picture-container"> <img src="<%=require(\'../src/images/avatar.jpg\')%>" alt="Bessie Coleman" class="profile__avatar"/> <button class="profile__picture-btn"> <img class="profile__edit-icon" src="<%= require(\'../src/images/editavatar.png\') %>" alt="Edit icon"/> </button> </div> <div class="profile__column"> <h1 class="profile__name">Bessie Coleman</h1> <p class="profile__description">Civil Aviator</p> <button type="button" class="profile__edit-btn button"> <img src="<%=require(\'../src/images/pencil-icon.svg\')%>" alt="Edit icon"/>Edit Profile </button> </div> <button type="button" class="profile__add-btn button"> <img src="<%=require(\'../src/images/plus.svg\')%>" alt="Plus icon"/> New Post </button> </section> <div class="cards page__section"> <ul class="cards__list"> </ul> </div> </main> <footer class="footer page__section"> <h2 class="footer__content">2025 Â© Spots</h2> </footer> <template id="card-template"> <li class="card"> <div class="card__image-container"> <img alt="Image related to the card content" class="card__image"/> <button type="button" class="card__delete-btn button"></button> </div> <div class="card__content"> <h2 class="card__title"></h2> <button type="button" class="card__like-btn button"></button> </div> </li> </template> <div class="modal modal--edit-profile" id="edit-profile-modal"> <div class="modal__container"> <button type="button" class="modal__close-btn"></button> <h2 class="modal__title">Edit Profile</h2> <form id="edit-profile" name="edit-profile" class="modal__form"> <label for="name" class="modal__label"> Name <input id="name" type="text" class="modal__input" placeholder="Type your name" minlength="2" maxlength="40" required/> <span id="name-error" class="modal__error"></span> </label> <label for="description" class="modal__label"> Description <input id="description" type="text" class="modal__input" placeholder="Describe yourself" minlength="2" maxlength="200" required/> <span id="description-error" class="modal__error"></span> </label> <button type="submit" class="modal__submit-btn button">Save</button> </form> </div> </div> <div class="modal modal--new-post" id="new-post-modal"> <div class="modal__container"> <button type="button" class="modal__close-btn button"></button> <h2 class="modal__title">New Post</h2> <form id="new-post" name="new-post" class="modal__form"> <label for="image_url" class="modal__label"> Image link <input id="image_url" type="url" class="modal__input" placeholder="Paste a link to the picture" required/> <span id="image_url-error" class="modal__error"></span> </label> <label for="new-post-caption-input" class="modal__label"> Caption <input id="new-post-caption-input" type="text" class="modal__input" placeholder="Type your caption" minlength="2" maxlength="30" required/> <span id="new-post-caption-input-error" class="modal__error"></span> </label> <button type="submit" class="modal__submit-btn button modal__submit-btn--disabled" disabled="disabled"> Save </button> </form> </div> </div> <div class="modal" id="preview-modal"> <div class="modal__content modal__content--preview"> <button type="button" class="modal__close-preview"></button> <figure class="modal__figure"> <img src="#" alt="Preview of the selected image" class="modal__image"/> <figcaption class="modal__caption"></figcaption> </figure> </div> </div> <div class="modal" id="delete-modal"> <div class="modal__container modal__container_delete"> <button type="button" class="modal__close-btn del__close-btn"></button> <h3 class="modal__title modal__title_delete">Are you sure you want to delete this image?</h3> <form id="delete-form" class="modal__form delete__form" novalidate> <div class="delete-buttons-container"> <button type="submit" class="modal__submit-btn modal__submit-btn_delete">Delete</button> <button type="button" class="modal__submit-btn modal__submit-btn_cancel">Cancel</button> </div> </form> </div> </div> <div class="modal modal--edit-avatar" id="edit-avatar-modal"> <div class="modal__container"> <button type="button" class="modal__close-btn button"></button> <h2 class="modal__title">Edit profile avatar</h2> <form id="edit-avatar" name="edit-avatar" class="modal__form"> <label for="avatar_url" class="modal__label"> Profile Picture <input id="avatar_url" type="url" class="modal__input" placeholder="Paste the link to an image" required/> <span id="avatar_url-error" class="modal__error"></span> </label> <button type="submit" class="modal__submit-btn button modal__submit-btn--disabled" disabled="disabled"> Save </button> </form> </div> </div> </body> </html>'}},t={};function o(a){var r=t[a];if(void 0!==r)return r.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,o),n.exports}o.p="/",function(){"use strict";o(817);const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn--disabled",inputErrorClass:"modal__input--error",errorClass:"modal__error--active"},t=(e,t)=>{const o=document.querySelector(`#${e.id}-error`);o&&(e.classList.remove(t.inputErrorClass),o.textContent="",o.classList.remove(t.errorClass))},a=(e,o)=>{const a=Array.from(e.querySelectorAll(o.inputSelector)),n=e.querySelector(o.submitButtonSelector);a.forEach((e=>{t(e,o)})),r(a,n,o)},r=(e,t,o)=>{(e=>e.some((e=>!e.validity.valid)))(e)?(t.classList.add(o.inactiveButtonClass),t.setAttribute("disabled",!0)):(t.classList.remove(o.inactiveButtonClass),t.removeAttribute("disabled"))};var n=o.p+"images/logo.svg",l=o.p+"images/avatar.jpg",s=o.p+"images/pencil-icon.svg",i=o.p+"images/plus.svg";function d(e,t){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?a:o}function c(e,t){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const a=t.submitter,r=a.textContent;return d(!0,a,r,o),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{d(!1,a,r)}))}const u=document.querySelector(".cards__list"),m=document.querySelector("#card-template"),_=document.querySelector("#preview-modal"),p=_?.querySelector(".modal__image"),b=_?.querySelector(".modal__caption"),v=document.querySelector(".profile__name"),h=document.querySelector(".profile__description"),f=document.querySelector("#edit-profile-modal"),g=document.querySelector("#new-post-modal"),y=document.querySelector(".profile__avatar"),S=document.querySelector(".profile__picture-btn"),q=document.querySelector(".profile__add-btn"),E=document.querySelectorAll(".modal__close-btn, .modal__close-preview"),C=document.querySelector("#delete-modal"),k=C.querySelector(".modal__submit-btn_delete"),L=C.querySelector(".modal__submit-btn_cancel"),w=document.querySelector("#edit-avatar-modal"),x=w.querySelector("#avatar_url"),P=w.querySelector(".modal__submit-btn"),A=document.querySelector(".profile__edit-btn"),D=document.forms["edit-profile"],U=document.forms["edit-avatar"],I=document.forms["new-post"],T=I.querySelector("#new-post-caption-input"),N=I.querySelector("#image_url"),B=document.querySelector(".header__logo"),$=document.querySelector(".profile__edit-btn img"),O=document.querySelector(".profile__add-btn img");let j,J,R;B&&(B.src=n),$&&($.src=s),O&&(O.src=i);const H=new class{constructor(e){let{baseUrl:t,headers:o}=e;this._baseUrl=t,this._headers=o}_checkResponse(e){return e.ok?e.json():Promise.reject(new Error(`Error: ${e.status}`))}_request(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return fetch(`${this._baseUrl}${e}`,t).then(this._checkResponse).catch(this.handleError)}getUserInfo(){return this._request("/users/me",{headers:this._headers})}getInitialCards(){return this._request("/cards",{headers:this._headers})}editProfileAvatar(e){let{avatar:t}=e;return this._request("/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}editUserInfo(e){let{name:t,about:o}=e;return this._request("/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:o})})}addNewCard(e){let{name:t,link:o}=e;return this._request("/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:o})})}deleteCard(e){return this._request(`/cards/${e}`,{method:"DELETE",headers:this._headers})}toggleLike(e,t){return this._request(`/cards/${e}/likes`,{method:t?"PUT":"DELETE",headers:this._headers})}getUserAndCards(){return Promise.all([this.getUserInfo(),this.getInitialCards()]).then((e=>{let[t,o]=e;return{userData:t,cards:o}}))}handleError(e){throw console.error("API Error: ",e),e}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"46c1a639-4215-418c-8205-87dec37d68b7","Content-Type":"application/json"}});function M(e){const t=m.content.querySelector("li").cloneNode(!0),o=t.querySelector(".card__image"),a=t.querySelector(".card__title"),r=t.querySelector(".card__like-btn"),n=t.querySelector(".card__delete-btn");return o.src=e.link,o.alt=e.name,a.textContent=e.name,e.isLiked&&r.classList.add("card__like-btn--liked"),r.addEventListener("click",(()=>{const t=r.classList.contains("card__like-btn--liked");H.toggleLike(e._id,!t).then((e=>{r.classList.toggle("card__like-btn--liked",e.isLiked)})).catch((e=>console.error("Error toggling like:",e)))})),o.addEventListener("click",(()=>{return t=e.link,o=e.name,void(_&&p&&b&&(p.src=t,p.alt=o,b.textContent=o,F(_)));var t,o})),n.addEventListener("click",(o=>{o.stopPropagation(),j=t,J=e._id,F(C)})),t}function z(e){e.preventDefault();const t=x.value.trim();if(t){const o=P.textContent;function a(){return H.editProfileAvatar({avatar:t}).then((e=>{y.src=e.avatar||l,Y(w)}))}P.textContent="Saving...",c(a,e).finally((()=>{P.textContent=o}))}}function F(e){e.classList.add("modal--opened"),document.addEventListener("keydown",G),e.addEventListener("click",K)}function Y(e){e.classList.remove("modal--opened"),document.removeEventListener("keydown",G),e.removeEventListener("click",K)}function G(e){if("Escape"===e.key){const e=document.querySelector(".modal--opened");e&&Y(e)}}function K(e){e.target.classList.contains("modal")&&Y(e.target)}function Q(e){c((function(){return H.editUserInfo({name:D.name.value,about:D.description.value}).then((e=>{v.textContent=e.name,h.textContent=e.about,Y(f)}))}),e)}function V(e){e.preventDefault();const t=T.value.trim(),o=N.value.trim();c((function(){return H.addNewCard({name:t,link:o}).then((e=>{const t=M(e);u.prepend(t),Y(g)}))}),e)}var W;H.getUserInfo().then((e=>{R=e._id,v.textContent=e.name,h.textContent=e.about,y.src=e.avatar||l})).catch((e=>console.error("Error fetching user info:",e))),H.getInitialCards().then((e=>{e.forEach((e=>{const t=M(e);u.appendChild(t)}))})).catch((e=>console.error("Error loading cards:",e))),k.addEventListener("click",(e=>{if(e.preventDefault(),J){const e=k.textContent;k.textContent="Deleting...",H.deleteCard(J).then((()=>{j.remove(),j=null,J=null,Y(C)})).catch((e=>console.error("Error deleting card:",e))).finally((()=>{k.textContent=e}))}})),L.addEventListener("click",(()=>{Y(C),j=null,J=null})),S.addEventListener("click",(()=>{F(w),a(U,e)})),document.addEventListener("DOMContentLoaded",(()=>{q.addEventListener("click",(()=>{const t=document.forms["new-post"];F(g),a(t,e),t.querySelector("#new-post-caption-input"),t.querySelector("#image_url")})),A.addEventListener("click",(()=>{D.name.value=v.textContent,D.description.value=h.textContent,F(f),a(D,e)})),D.addEventListener("submit",Q),document.forms["new-post"].addEventListener("submit",V),U.addEventListener("submit",z),E.forEach((e=>e.addEventListener("click",(()=>Y(e.closest(".modal"))))))})),W=e,document.querySelectorAll(W.formSelector).forEach((e=>{((e,o)=>{const a=Array.from(e.querySelectorAll(o.inputSelector)),n=e.querySelector(o.submitButtonSelector);a.forEach((e=>{e.addEventListener("input",(()=>{((e,o,a)=>{o.validity.valid?t(o,a):((e,t,o)=>{const a=document.querySelector(`#${e.id}-error`);a&&(e.classList.add(o.inputErrorClass),a.textContent=t,a.classList.add(o.errorClass))})(o,o.validationMessage,a)})(0,e,o),r(a,n,o)}))})),r(a,n,o)})(e,W)}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,